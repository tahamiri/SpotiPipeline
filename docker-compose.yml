version: '3.8'
services:
  kafka-1:
    image: confluentinc/cp-kafka:latest
    container_name: kafka-1
    hostname: kafka-1
    ports:
      - "9092:9092"
    environment:
      KAFKA_NODE_ID: 1
      KAFKA_PROCESS_ROLES: "broker,controller"
      KAFKA_LISTENERS: "PLAINTEXT://kafka-1:9092,CONTROLLER://kafka-1:9093"
      KAFKA_ADVERTISED_LISTENERS: "PLAINTEXT://kafka-1:9092"
      KAFKA_CONTROLLER_QUORUM_VOTERS: "1@kafka-1:9093,2@kafka-2:9093,3@kafka-3:9093"
      KAFKA_CONTROLLER_LISTENER_NAMES: "CONTROLLER"
      KAFKA_LOG_DIRS: "/var/lib/kafka/data"
      KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR: 3
      KAFKA_TRANSACTION_STATE_LOG_REPLICATION_FACTOR: 3
      KAFKA_TRANSACTION_STATE_LOG_MIN_ISR: 2
      CLUSTER_ID: 1
    volumes:
      - kafka1_data:/var/lib/kafka/data
    networks:
      - kafka-net


  kafka-2:
    image: confluentinc/cp-kafka:latest
    container_name: kafka-2
    hostname: kafka-2
    ports:
      - "9094:9092"
    environment:
      KAFKA_NODE_ID: 2
      KAFKA_PROCESS_ROLES: "broker,controller"
      KAFKA_LISTENERS: "PLAINTEXT://kafka-2:9092,CONTROLLER://kafka-2:9093"
      KAFKA_ADVERTISED_LISTENERS: "PLAINTEXT://kafka-2:9092"
      KAFKA_CONTROLLER_QUORUM_VOTERS: "1@kafka-1:9093,2@kafka-2:9093,3@kafka-3:9093"
      KAFKA_CONTROLLER_LISTENER_NAMES: "CONTROLLER"
      KAFKA_LOG_DIRS: "/var/lib/kafka/data"
      KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR: 3
      KAFKA_TRANSACTION_STATE_LOG_REPLICATION_FACTOR: 3
      KAFKA_TRANSACTION_STATE_LOG_MIN_ISR: 2
      CLUSTER_ID: 1
    volumes:
      - kafka2_data:/var/lib/kafka/data
    networks:
      - kafka-net

  kafka-3:
    image: confluentinc/cp-kafka:latest
    container_name: kafka-3
    hostname: kafka-3
    ports:
      - "9096:9092"
    environment:
      KAFKA_NODE_ID: 3
      KAFKA_PROCESS_ROLES: "broker,controller"
      KAFKA_LISTENERS: "PLAINTEXT://kafka-3:9092,CONTROLLER://kafka-3:9093"
      KAFKA_ADVERTISED_LISTENERS: "PLAINTEXT://kafka-3:9092"
      KAFKA_CONTROLLER_QUORUM_VOTERS: "1@kafka-1:9093,2@kafka-2:9093,3@kafka-3:9093"
      KAFKA_CONTROLLER_LISTENER_NAMES: "CONTROLLER"
      KAFKA_LOG_DIRS: "/var/lib/kafka/data"
      KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR: 3
      KAFKA_TRANSACTION_STATE_LOG_REPLICATION_FACTOR: 3
      KAFKA_TRANSACTION_STATE_LOG_MIN_ISR: 2
      CLUSTER_ID: 1
    volumes:
      - kafka3_data:/var/lib/kafka/data
    networks:
      - kafka-net
    healthcheck:
      test: ["CMD", "kafka-topics", "--bootstrap-server", "kafka-1:9092,kafka-2:9092,kafka-3:9092", "--list"]
      interval: 30s
      timeout: 10s
      retries: 5

  spark-master:
    image: docker.arvancloud.ir/bitnami/spark:latest
    container_name: spark-master
    hostname: spark-master
    environment:
      - SPARK_MODE=master
      - SPARK_MASTER_HOST=spark-master
    volumes:
      - ./spark_jobs:/spark_jobs
    ports:
      - "7077:7077"
      - "8081:8080"
    networks:
      - kafka-net

  spark-worker-1:
    image: docker.arvancloud.ir/bitnami/spark:latest
    container_name: spark-worker-1
    hostname: spark-worker-1
    environment:
      - SPARK_MODE=worker
      - SPARK_MASTER_URL=spark://spark-master:7077
      - SPARK_WORKER_MEMORY=1G
      - SPARK_WORKER_CORES=2
    volumes:
      - ./spark_jobs:/spark_jobs
    depends_on:
      - spark-master
    networks:
      - kafka-net

  spark-worker-2:
    image: docker.arvancloud.ir/bitnami/spark:latest
    container_name: spark-worker-2
    hostname: spark-worker-2
    environment:
      - SPARK_MODE=worker
      - SPARK_MASTER_URL=spark://spark-master:7077
      - SPARK_WORKER_MEMORY=1G
      - SPARK_WORKER_CORES=2
    volumes:
      - ./spark_jobs:/spark_jobs
    depends_on:
      - spark-master
    networks:
      - kafka-net


  kafkaui:
    image: provectuslabs/kafka-ui:latest
    container_name: kafkaui
    ports:
      - "8080:8080"
    environment:
      KAFKA_CLUSTERS_0_NAME: "local-cluster"
      KAFKA_CLUSTERS_0_BOOTSTRAP_SERVERS: "kafka-1:9092,kafka-2:9092,kafka-3:9092"
    depends_on:
      - kafka-1
      - kafka-2
      - kafka-3
    networks:
      - kafka-net
  eventsim:
    image: khoramism/event-generator-eventsim:1.2
    environment:
      - BOOTSTRAP_SERVERS=kafka-1:9092
      - SECURITY_PROTOCOL=PLAINTEXT
      - SASL_JAAS_CONFIG=''
      - SASL_MECHANISM=''
      - CLIENT_DNS_LOOKUP=use_all_dns_ips
      - SESSION_TIMEOUT_MS=45000
      - KEY_SERIALIZER=org.apache.kafka.common.serialization.ByteArraySerializer
      - VALUE_SERIALIZER=org.apache.kafka.common.serialization.ByteArraySerializer
      - ACKS=all
    command: ./bin/eventsim -c configs/Guitar-config.json --continuous --from 200 --nusers 20 -k 1
    networks:
      - kafka-net
    depends_on:
      kafka-3:
        condition: service_healthy





networks:
  kafka-net:
    driver: bridge

volumes:
  kafka1_data:
  kafka2_data:
  kafka3_data:

